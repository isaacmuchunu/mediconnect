# Generated by Django 4.2.11 on 2025-08-21 16:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('title', models.CharField(default='Notification', max_length=200, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10, verbose_name='Priority')),
                ('delivery_method', models.CharField(choices=[('in_app', 'In-App'), ('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification')], default='in_app', max_length=20, verbose_name='Delivery Method')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('read', 'Read')], default='pending', max_length=20, verbose_name='Status')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Object ID')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadata')),
                ('scheduled_for', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled For')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('channel_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('webhook', 'Webhook'), ('slack', 'Slack'), ('teams', 'Microsoft Teams'), ('telegram', 'Telegram'), ('whatsapp', 'WhatsApp')], max_length=20, verbose_name='Channel Type')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance'), ('error', 'Error')], default='active', max_length=20, verbose_name='Status')),
                ('configuration', models.JSONField(default=dict, help_text='Channel-specific configuration', verbose_name='Configuration')),
                ('rate_limit', models.IntegerField(default=100, help_text='Messages per minute', verbose_name='Rate Limit')),
                ('retry_attempts', models.IntegerField(default=3, verbose_name='Retry Attempts')),
                ('retry_delay', models.IntegerField(default=300, help_text='Delay in seconds', verbose_name='Retry Delay')),
                ('total_sent', models.IntegerField(default=0, verbose_name='Total Sent')),
                ('total_delivered', models.IntegerField(default=0, verbose_name='Total Delivered')),
                ('total_failed', models.IntegerField(default=0, verbose_name='Total Failed')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Last Used')),
                ('is_default', models.BooleanField(default=False, verbose_name='Is Default')),
                ('allowed_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Allowed Users')),
            ],
            options={
                'verbose_name': 'Notification Channel',
                'verbose_name_plural': 'Notification Channels',
                'ordering': ['name'],
                'unique_together': {('channel_type', 'name')},
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('notification_type', models.CharField(choices=[('referral_created', 'Referral Created'), ('referral_accepted', 'Referral Accepted'), ('referral_rejected', 'Referral Rejected'), ('referral_completed', 'Referral Completed'), ('appointment_scheduled', 'Appointment Scheduled'), ('appointment_reminder', 'Appointment Reminder'), ('appointment_cancelled', 'Appointment Cancelled'), ('ambulance_requested', 'Ambulance Requested'), ('ambulance_dispatched', 'Ambulance Dispatched'), ('system_maintenance', 'System Maintenance'), ('account_created', 'Account Created'), ('password_reset', 'Password Reset'), ('profile_updated', 'Profile Updated'), ('emergency_alert', 'Emergency Alert')], max_length=50, unique=True, verbose_name='Notification Type')),
                ('subject_template', models.CharField(max_length=200, verbose_name='Subject Template')),
                ('title_template', models.CharField(blank=True, max_length=200, verbose_name='Title Template')),
                ('message_template', models.TextField(verbose_name='Message Template')),
                ('email_template', models.TextField(blank=True, verbose_name='Email Template')),
                ('sms_template', models.CharField(blank=True, max_length=160, verbose_name='SMS Template')),
                ('is_email_enabled', models.BooleanField(default=True, verbose_name='Email Enabled')),
                ('is_sms_enabled', models.BooleanField(default=False, verbose_name='SMS Enabled')),
                ('is_push_enabled', models.BooleanField(default=True, verbose_name='Push Enabled')),
                ('default_priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10, verbose_name='Default Priority')),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('trigger_type', models.CharField(choices=[('model_created', 'Model Created'), ('model_updated', 'Model Updated'), ('model_deleted', 'Model Deleted'), ('field_changed', 'Field Changed'), ('time_based', 'Time Based'), ('condition_met', 'Condition Met'), ('user_action', 'User Action'), ('system_event', 'System Event')], max_length=20, verbose_name='Trigger Type')),
                ('conditions', models.JSONField(default=list, help_text='List of conditions to check', verbose_name='Conditions')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10, verbose_name='Priority')),
                ('recipient_roles', models.JSONField(default=list, help_text='List of user roles to notify', verbose_name='Recipient Roles')),
                ('recipient_emails', models.TextField(blank=True, help_text='Comma-separated email addresses', verbose_name='Recipient Emails')),
                ('delay_minutes', models.IntegerField(default=0, help_text='Delay before sending notification', verbose_name='Delay (minutes)')),
                ('cooldown_minutes', models.IntegerField(default=0, help_text='Minimum time between notifications', verbose_name='Cooldown (minutes)')),
                ('max_notifications_per_day', models.IntegerField(blank=True, null=True, verbose_name='Max Notifications Per Day')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Is Enabled')),
                ('trigger_count', models.IntegerField(default=0, verbose_name='Trigger Count')),
                ('last_triggered', models.DateTimeField(blank=True, null=True, verbose_name='Last Triggered')),
                ('channels', models.ManyToManyField(to='notifications.notificationchannel', verbose_name='Channels')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Target Model')),
                ('recipient_users', models.ManyToManyField(blank=True, related_name='notification_rules', to=settings.AUTH_USER_MODEL, verbose_name='Recipient Users')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate', verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Notification Rule',
                'verbose_name_plural': 'Notification Rules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('priority', models.IntegerField(default=0)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('next_retry', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notification')),
            ],
            options={
                'ordering': ['-priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('sms_notifications', models.BooleanField(default=False, verbose_name='SMS Notifications')),
                ('push_notifications', models.BooleanField(default=True, verbose_name='Push Notifications')),
                ('referral_notifications', models.BooleanField(default=True, verbose_name='Referral Notifications')),
                ('appointment_notifications', models.BooleanField(default=True, verbose_name='Appointment Notifications')),
                ('ambulance_notifications', models.BooleanField(default=True, verbose_name='Ambulance Notifications')),
                ('system_notifications', models.BooleanField(default=True, verbose_name='System Notifications')),
                ('emergency_notifications', models.BooleanField(default=True, verbose_name='Emergency Notifications')),
                ('marketing_notifications', models.BooleanField(default=False, verbose_name='Marketing Notifications')),
                ('quiet_hours_start', models.TimeField(default='22:00', verbose_name='Quiet Hours Start')),
                ('quiet_hours_end', models.TimeField(default='08:00', verbose_name='Quiet Hours End')),
                ('weekend_notifications', models.BooleanField(default=True, verbose_name='Weekend Notifications')),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly')], default='immediate', max_length=20, verbose_name='Digest Frequency')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('delivery_method', models.CharField(max_length=20)),
                ('status', models.CharField(max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('response_data', models.JSONField(blank=True, default=dict)),
                ('attempt_count', models.PositiveIntegerField(default=1)),
                ('recipient_email', models.EmailField(blank=True, max_length=254)),
                ('recipient_phone', models.CharField(blank=True, max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('recipient_filters', models.JSONField(default=dict, help_text='Filters to select recipients', verbose_name='Recipient Filters')),
                ('external_recipients', models.TextField(blank=True, help_text='External email addresses, one per line', verbose_name='External Recipients')),
                ('subject', models.CharField(max_length=200, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('variables', models.JSONField(default=dict, help_text='Template variables', verbose_name='Variables')),
                ('scheduled_for', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled For')),
                ('send_immediately', models.BooleanField(default=False, verbose_name='Send Immediately')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('scheduled', 'Scheduled'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='Status')),
                ('total_recipients', models.IntegerField(default=0, verbose_name='Total Recipients')),
                ('sent_count', models.IntegerField(default=0, verbose_name='Sent Count')),
                ('delivered_count', models.IntegerField(default=0, verbose_name='Delivered Count')),
                ('failed_count', models.IntegerField(default=0, verbose_name='Failed Count')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('channels', models.ManyToManyField(to='notifications.notificationchannel', verbose_name='Channels')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_batches', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('recipient_users', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Recipient Users')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate', verbose_name='Template')),
            ],
            options={
                'verbose_name': 'Notification Batch',
                'verbose_name_plural': 'Notification Batches',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('file', models.FileField(upload_to='notification_attachments/', verbose_name='File')),
                ('file_size', models.BigIntegerField(blank=True, null=True, verbose_name='File Size')),
                ('content_type', models.CharField(blank=True, max_length=100, verbose_name='Content Type')),
                ('attachment_type', models.CharField(choices=[('document', 'Document'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('archive', 'Archive'), ('other', 'Other')], default='document', max_length=20, verbose_name='Attachment Type')),
                ('is_public', models.BooleanField(default=False, verbose_name='Is Public')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('download_count', models.IntegerField(default=0, verbose_name='Download Count')),
                ('max_downloads', models.IntegerField(blank=True, null=True, verbose_name='Max Downloads')),
                ('checksum', models.CharField(blank=True, max_length=64, verbose_name='Checksum')),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='notifications.notificationbatch', verbose_name='Batch')),
                ('notification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='notifications.notification', verbose_name='Notification')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='notifications.notificationtemplate', verbose_name='Template')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Uploaded By')),
            ],
            options={
                'verbose_name': 'Notification Attachment',
                'verbose_name_plural': 'Notification Attachments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate', verbose_name='Template'),
        ),
        migrations.AddField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='BulkNotificationProxy',
            fields=[
            ],
            options={
                'verbose_name': 'Bulk Notification',
                'verbose_name_plural': 'Bulk Notifications',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('notifications.notification',),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'status'], name='notificatio_user_id_7088ed_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'read_at'], name='notificatio_user_id_47e85c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['priority', 'created_at'], name='notificatio_priorit_f7c359_idx'),
        ),
    ]
