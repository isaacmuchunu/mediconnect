# Generated by Django 4.2.11 on 2025-08-21 21:03

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('doctors', '0002_alter_availability_options_and_more'),
        ('ambulances', '0002_emergencycall_callstatushistory_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='TrafficCondition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('latitude', models.FloatField(verbose_name='Latitude')),
                ('longitude', models.FloatField(verbose_name='Longitude')),
                ('radius_meters', models.PositiveIntegerField(default=500, verbose_name='Affected Radius (meters)')),
                ('condition_type', models.CharField(choices=[('traffic', 'Traffic Congestion'), ('accident', 'Accident'), ('construction', 'Construction'), ('weather', 'Weather Condition'), ('event', 'Special Event'), ('emergency', 'Emergency Situation')], max_length=20, verbose_name='Condition Type')),
                ('severity', models.CharField(choices=[('light', 'Light Traffic'), ('moderate', 'Moderate Traffic'), ('heavy', 'Heavy Traffic'), ('severe', 'Severe Traffic'), ('blocked', 'Road Blocked')], max_length=20, verbose_name='Severity')),
                ('description', models.TextField(verbose_name='Description')),
                ('speed_reduction_percent', models.PositiveIntegerField(default=0, verbose_name='Speed Reduction (%)')),
                ('delay_minutes', models.PositiveIntegerField(default=0, verbose_name='Expected Delay (minutes)')),
                ('start_time', models.DateTimeField(auto_now_add=True, verbose_name='Start Time')),
                ('estimated_end_time', models.DateTimeField(blank=True, null=True, verbose_name='Estimated End Time')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('data_source', models.CharField(default='manual', max_length=100, verbose_name='Data Source')),
                ('confidence_score', models.FloatField(default=1.0, verbose_name='Confidence Score')),
            ],
            options={
                'verbose_name': 'Traffic Condition',
                'verbose_name_plural': 'Traffic Conditions',
                'ordering': ['-start_time'],
                'indexes': [models.Index(fields=['latitude', 'longitude'], name='ambulances__latitud_a2d274_idx'), models.Index(fields=['condition_type', 'severity'], name='ambulances__conditi_793e27_idx'), models.Index(fields=['start_time'], name='ambulances__start_t_a95e12_idx')],
            },
        ),
        migrations.CreateModel(
            name='RouteOptimization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('origin_latitude', models.FloatField(verbose_name='Origin Latitude')),
                ('origin_longitude', models.FloatField(verbose_name='Origin Longitude')),
                ('destination_latitude', models.FloatField(verbose_name='Destination Latitude')),
                ('destination_longitude', models.FloatField(verbose_name='Destination Longitude')),
                ('route_type', models.CharField(choices=[('fastest', 'Fastest Route'), ('shortest', 'Shortest Route'), ('avoid_traffic', 'Avoid Traffic'), ('emergency', 'Emergency Route')], default='emergency', max_length=20, verbose_name='Route Type')),
                ('total_distance_km', models.FloatField(blank=True, null=True, verbose_name='Total Distance (km)')),
                ('estimated_duration_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='Estimated Duration (minutes)')),
                ('traffic_delay_minutes', models.PositiveIntegerField(default=0, verbose_name='Traffic Delay (minutes)')),
                ('route_polyline', models.TextField(blank=True, verbose_name='Route Polyline')),
                ('waypoints', models.JSONField(default=list, verbose_name='Waypoints')),
                ('traffic_conditions', models.JSONField(default=dict, verbose_name='Traffic Conditions')),
                ('alternative_routes', models.JSONField(default=list, verbose_name='Alternative Routes')),
                ('optimization_score', models.FloatField(default=0.0, verbose_name='Optimization Score')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('dispatch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_optimizations', to='ambulances.dispatch')),
            ],
            options={
                'verbose_name': 'Route Optimization',
                'verbose_name_plural': 'Route Optimizations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GeofenceZone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, verbose_name='Zone Name')),
                ('zone_type', models.CharField(choices=[('hospital', 'Hospital Zone'), ('station', 'Ambulance Station'), ('service_area', 'Service Area'), ('restricted', 'Restricted Zone'), ('pickup_zone', 'Pickup Zone'), ('emergency_zone', 'Emergency Zone')], max_length=20, verbose_name='Zone Type')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('center_latitude', models.FloatField(verbose_name='Center Latitude')),
                ('center_longitude', models.FloatField(verbose_name='Center Longitude')),
                ('radius_meters', models.PositiveIntegerField(default=100, verbose_name='Radius (meters)')),
                ('auto_status_change', models.BooleanField(default=False, verbose_name='Auto Status Change')),
                ('target_status', models.CharField(blank=True, max_length=20, verbose_name='Target Status')),
                ('notification_enabled', models.BooleanField(default=True, verbose_name='Notification Enabled')),
                ('ambulance_station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='geofence_zones', to='ambulances.ambulancestation')),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='geofence_zones', to='doctors.hospital')),
            ],
            options={
                'verbose_name': 'Geofence Zone',
                'verbose_name_plural': 'Geofence Zones',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GPSTrackingEnhanced',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('latitude', models.FloatField(verbose_name='Latitude')),
                ('longitude', models.FloatField(verbose_name='Longitude')),
                ('altitude', models.FloatField(blank=True, null=True, verbose_name='Altitude (meters)')),
                ('accuracy', models.FloatField(blank=True, null=True, verbose_name='GPS Accuracy (meters)')),
                ('speed_kmh', models.FloatField(default=0.0, verbose_name='Speed (km/h)')),
                ('heading_degrees', models.FloatField(blank=True, null=True, verbose_name='Heading (degrees)')),
                ('acceleration', models.FloatField(blank=True, null=True, verbose_name='Acceleration (m/sÂ²)')),
                ('engine_status', models.BooleanField(default=True, verbose_name='Engine On')),
                ('emergency_lights', models.BooleanField(default=False, verbose_name='Emergency Lights')),
                ('siren_active', models.BooleanField(default=False, verbose_name='Siren Active')),
                ('distance_to_destination_km', models.FloatField(blank=True, null=True, verbose_name='Distance to Destination (km)')),
                ('eta_minutes', models.PositiveIntegerField(blank=True, null=True, verbose_name='ETA (minutes)')),
                ('route_deviation_meters', models.FloatField(default=0.0, verbose_name='Route Deviation (meters)')),
                ('signal_strength', models.PositiveIntegerField(blank=True, null=True, verbose_name='GPS Signal Strength')),
                ('battery_level', models.PositiveIntegerField(blank=True, null=True, verbose_name='Device Battery Level')),
                ('data_source', models.CharField(default='mobile_app', max_length=50, verbose_name='Data Source')),
                ('in_service_area', models.BooleanField(default=True, verbose_name='In Service Area')),
                ('near_hospital', models.BooleanField(default=False, verbose_name='Near Hospital')),
                ('at_pickup_location', models.BooleanField(default=False, verbose_name='At Pickup Location')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('ambulance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gps_tracking_enhanced', to='ambulances.ambulance')),
                ('dispatch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gps_tracking_enhanced', to='ambulances.dispatch')),
            ],
            options={
                'verbose_name': 'Enhanced GPS Tracking',
                'verbose_name_plural': 'Enhanced GPS Tracking',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['ambulance', '-timestamp'], name='ambulances__ambulan_345cea_idx'), models.Index(fields=['dispatch', '-timestamp'], name='ambulances__dispatc_86b830_idx'), models.Index(fields=['timestamp'], name='ambulances__timesta_6d481a_idx')],
            },
        ),
    ]
