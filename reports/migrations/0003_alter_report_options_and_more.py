# Generated by Django 4.2.11 on 2025-08-18 20:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('reports', '0002_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='report',
            options={'ordering': ['-created_at'], 'permissions': [('can_view_all_reports', 'Can view all reports'), ('can_generate_reports', 'Can generate reports'), ('can_schedule_reports', 'Can schedule reports')], 'verbose_name': 'Report', 'verbose_name_plural': 'Reports'},
        ),
        migrations.RenameField(
            model_name='report',
            old_name='generated_at',
            new_name='created_at',
        ),
        migrations.RemoveField(
            model_name='report',
            name='user',
        ),
        migrations.AddField(
            model_name='report',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='report',
            name='date_from',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='report',
            name='date_to',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='report',
            name='error_message',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='report',
            name='file_path',
            field=models.FileField(blank=True, null=True, upload_to='reports/'),
        ),
        migrations.AddField(
            model_name='report',
            name='format',
            field=models.CharField(choices=[('html', 'HTML'), ('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], default='html', max_length=10),
        ),
        migrations.AddField(
            model_name='report',
            name='generated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='report',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='report',
            name='is_public',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='report',
            name='parameters',
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name='report',
            name='processing_time',
            field=models.DurationField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='report',
            name='shared_with',
            field=models.ManyToManyField(blank=True, related_name='shared_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='report',
            name='started_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='report',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='report',
            name='summary',
            field=models.JSONField(default=dict, help_text='Report summary statistics'),
        ),
        migrations.AddField(
            model_name='report',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='report',
            name='content',
            field=models.TextField(blank=True),
        ),
        migrations.CreateModel(
            name='SystemUsageAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date', models.DateField()),
                ('hour', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('total_users', models.IntegerField(default=0)),
                ('active_users', models.IntegerField(default=0)),
                ('new_users', models.IntegerField(default=0)),
                ('total_sessions', models.IntegerField(default=0)),
                ('avg_session_duration', models.DurationField(blank=True, null=True)),
                ('page_views', models.IntegerField(default=0)),
                ('unique_page_views', models.IntegerField(default=0)),
                ('feature_usage', models.JSONField(default=dict)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('error_rate', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
            ],
            options={
                'verbose_name': 'System Usage Analytics',
                'verbose_name_plural': 'System Usage Analytics',
                'ordering': ['-date', '-hour'],
                'unique_together': {('date', 'hour')},
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('report_type', models.CharField(choices=[('referral_analytics', 'Referral Analytics'), ('appointment_analytics', 'Appointment Analytics'), ('patient_demographics', 'Patient Demographics'), ('doctor_performance', 'Doctor Performance'), ('system_usage', 'System Usage'), ('compliance', 'Compliance Report'), ('financial', 'Financial Report'), ('quality_metrics', 'Quality Metrics'), ('wait_times', 'Wait Times Analysis'), ('custom', 'Custom Report')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('query_template', models.TextField(help_text='SQL query template for the report')),
                ('parameters', models.JSONField(default=dict, help_text='Report parameters and filters')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('on_demand', 'On Demand')], default='on_demand', max_length=20)),
                ('auto_generate', models.BooleanField(default=False)),
                ('recipients', models.ManyToManyField(blank=True, help_text='Users who receive this report automatically', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=200)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('on_demand', 'On Demand')], max_length=20)),
                ('day_of_week', models.IntegerField(blank=True, help_text='0=Monday, 6=Sunday', null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(6)])),
                ('day_of_month', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('time_of_day', models.TimeField(default='09:00')),
                ('is_enabled', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('default_parameters', models.JSONField(default=dict)),
                ('recipients', models.ManyToManyField(help_text='Users who will receive the scheduled report', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.reporttemplate')),
            ],
            options={
                'verbose_name': 'Report Schedule',
                'verbose_name_plural': 'Report Schedules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('action', models.CharField(choices=[('view', 'Viewed'), ('download', 'Downloaded'), ('share', 'Shared'), ('export', 'Exported')], max_length=50)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='access_logs', to='reports.report')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Access',
                'verbose_name_plural': 'Report Access Logs',
                'ordering': ['-accessed_at'],
            },
        ),
        migrations.CreateModel(
            name='ReferralAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date', models.DateField()),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('total_referrals', models.IntegerField(default=0)),
                ('pending_referrals', models.IntegerField(default=0)),
                ('accepted_referrals', models.IntegerField(default=0)),
                ('rejected_referrals', models.IntegerField(default=0)),
                ('completed_referrals', models.IntegerField(default=0)),
                ('avg_response_time', models.DurationField(blank=True, null=True)),
                ('avg_completion_time', models.DurationField(blank=True, null=True)),
                ('specialty_breakdown', models.JSONField(default=dict)),
                ('acceptance_rate', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('completion_rate', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
            ],
            options={
                'verbose_name': 'Referral Analytics',
                'verbose_name_plural': 'Referral Analytics',
                'ordering': ['-date'],
                'unique_together': {('date', 'period_type')},
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('report_type', models.CharField(choices=[('hipaa', 'HIPAA Compliance'), ('gdpr', 'GDPR Compliance'), ('audit_trail', 'Audit Trail'), ('data_access', 'Data Access Log'), ('security', 'Security Report'), ('quality', 'Quality Assurance')], max_length=50)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('total_events', models.IntegerField(default=0)),
                ('compliant_events', models.IntegerField(default=0)),
                ('non_compliant_events', models.IntegerField(default=0)),
                ('findings', models.JSONField(default=list)),
                ('recommendations', models.JSONField(default=list)),
                ('risk_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='low', max_length=20)),
                ('compliance_score', models.FloatField(default=100.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('generated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_compliance_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Compliance Report',
                'verbose_name_plural': 'Compliance Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('date', models.DateField()),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('total_appointments', models.IntegerField(default=0)),
                ('scheduled_appointments', models.IntegerField(default=0)),
                ('completed_appointments', models.IntegerField(default=0)),
                ('cancelled_appointments', models.IntegerField(default=0)),
                ('no_show_appointments', models.IntegerField(default=0)),
                ('avg_wait_time', models.DurationField(blank=True, null=True)),
                ('avg_appointment_duration', models.DurationField(blank=True, null=True)),
                ('utilization_rate', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('no_show_rate', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
            ],
            options={
                'verbose_name': 'Appointment Analytics',
                'verbose_name_plural': 'Appointment Analytics',
                'ordering': ['-date'],
                'unique_together': {('date', 'period_type')},
            },
        ),
        migrations.AddField(
            model_name='report',
            name='template',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.reporttemplate'),
        ),
    ]
