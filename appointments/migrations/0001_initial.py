# Generated by Django 4.2.11 on 2025-08-21 16:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctors', '0002_alter_availability_options_and_more'),
        ('referrals', '0001_initial'),
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('appointment_date', models.DateTimeField(blank=True, null=True, verbose_name='Appointment Date')),
                ('duration_minutes', models.PositiveIntegerField(default=30, verbose_name='Duration (minutes)')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='End Time')),
                ('room_number', models.CharField(blank=True, max_length=20, verbose_name='Room Number')),
                ('department', models.CharField(blank=True, max_length=100, verbose_name='Department')),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('checked_in', 'Checked In'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='scheduled', max_length=20, verbose_name='Status')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent'), ('emergency', 'Emergency')], default='normal', max_length=20, verbose_name='Priority')),
                ('chief_complaint', models.TextField(blank=True, verbose_name='Chief Complaint')),
                ('notes', models.TextField(blank=True, verbose_name='Appointment Notes')),
                ('preparation_instructions', models.TextField(blank=True, verbose_name='Preparation Instructions')),
                ('confirmed_at', models.DateTimeField(blank=True, null=True, verbose_name='Confirmed At')),
                ('checked_in_at', models.DateTimeField(blank=True, null=True, verbose_name='Checked In At')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='Cancelled At')),
                ('cancellation_reason', models.CharField(blank=True, choices=[('patient_request', 'Patient Request'), ('doctor_unavailable', 'Doctor Unavailable'), ('emergency', 'Emergency'), ('illness', 'Patient Illness'), ('scheduling_conflict', 'Scheduling Conflict'), ('weather', 'Weather Conditions'), ('other', 'Other')], max_length=30, verbose_name='Cancellation Reason')),
                ('cancellation_notes', models.TextField(blank=True, verbose_name='Cancellation Notes')),
                ('rescheduled_from', models.DateTimeField(blank=True, null=True, verbose_name='Rescheduled From')),
                ('send_reminders', models.BooleanField(default=True, verbose_name='Send Reminders')),
                ('reminder_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Reminder Sent At')),
                ('confirmation_sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Confirmation Sent At')),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Estimated Cost')),
                ('insurance_verified', models.BooleanField(default=False, verbose_name='Insurance Verified')),
                ('copay_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Copay Amount')),
                ('follow_up_required', models.BooleanField(default=False, verbose_name='Follow-up Required')),
                ('follow_up_instructions', models.TextField(blank=True, verbose_name='Follow-up Instructions')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'ordering': ['appointment_date'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Type Name')),
                ('code', models.CharField(max_length=20, unique=True, verbose_name='Type Code')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('duration_minutes', models.PositiveIntegerField(default=30, verbose_name='Default Duration (minutes)')),
                ('color_code', models.CharField(default='#007bff', help_text='Hex color code for calendar display', max_length=7, verbose_name='Color Code')),
                ('requires_preparation', models.BooleanField(default=False, verbose_name='Requires Preparation')),
                ('preparation_instructions', models.TextField(blank=True, verbose_name='Preparation Instructions')),
                ('is_emergency', models.BooleanField(default=False, verbose_name='Emergency Appointment')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'Appointment Type',
                'verbose_name_plural': 'Appointment Types',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentNote',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('note_type', models.CharField(choices=[('clinical', 'Clinical Note'), ('administrative', 'Administrative Note'), ('billing', 'Billing Note'), ('follow_up', 'Follow-up Note'), ('cancellation', 'Cancellation Note'), ('rescheduling', 'Rescheduling Note')], max_length=20, verbose_name='Note Type')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('is_private', models.BooleanField(default=False, verbose_name='Private Note')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_notes', to='appointments.appointment')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointment_notes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Appointment Note',
                'verbose_name_plural': 'Appointment Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('attachment_type', models.CharField(choices=[('medical_record', 'Medical Record'), ('lab_result', 'Lab Result'), ('imaging', 'Imaging'), ('prescription', 'Prescription'), ('insurance', 'Insurance Document'), ('consent', 'Consent Form'), ('other', 'Other')], max_length=20, verbose_name='Attachment Type')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('file', models.FileField(upload_to='appointments/attachments/%Y/%m/', verbose_name='File')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='File Size (bytes)')),
                ('mime_type', models.CharField(blank=True, max_length=100, verbose_name='MIME Type')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='appointments.appointment')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_appointment_attachments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Appointment Attachment',
                'verbose_name_plural': 'Appointment Attachments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='appointment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='appointments.appointmenttype'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='cancelled_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='checked_in_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='checked_in_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='confirmed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='confirmed_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='doctors.doctorprofile'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='hospital',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='doctors.hospital'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='original_appointment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rescheduled_appointments', to='appointments.appointment'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='patients.patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='referral',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='referrals.referral'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='scheduled_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_appointments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('reminder_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('phone', 'Phone Call'), ('push', 'Push Notification')], max_length=20, verbose_name='Reminder Type')),
                ('scheduled_time', models.DateTimeField(verbose_name='Scheduled Time')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('subject', models.CharField(blank=True, max_length=200, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('recipient', models.CharField(max_length=255, verbose_name='Recipient')),
                ('delivery_id', models.CharField(blank=True, max_length=100, verbose_name='Delivery ID')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='appointments.appointment')),
            ],
            options={
                'verbose_name': 'Appointment Reminder',
                'verbose_name_plural': 'Appointment Reminders',
                'ordering': ['scheduled_time'],
                'indexes': [models.Index(fields=['appointment', 'reminder_type'], name='appointment_appoint_895d66_idx'), models.Index(fields=['scheduled_time', 'status'], name='appointment_schedul_911542_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='appointmentreminder',
            constraint=models.UniqueConstraint(fields=('appointment', 'reminder_type', 'scheduled_time'), name='unique_appointment_reminder'),
        ),
        migrations.AddIndex(
            model_name='appointmentnote',
            index=models.Index(fields=['appointment', 'note_type'], name='appointment_appoint_f4be51_idx'),
        ),
        migrations.AddIndex(
            model_name='appointmentnote',
            index=models.Index(fields=['author', '-created_at'], name='appointment_author__003075_idx'),
        ),
        migrations.AddIndex(
            model_name='appointmentattachment',
            index=models.Index(fields=['appointment', 'attachment_type'], name='appointment_appoint_769d8d_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'appointment_date'], name='appointment_patient_8037cd_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['doctor', 'appointment_date'], name='appointment_doctor__4d4b79_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['hospital', 'appointment_date'], name='appointment_hospita_41bbb7_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status', 'appointment_date'], name='appointment_status_7c15d1_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_date', 'status'], name='appointment_appoint_fb412a_idx'),
        ),
        migrations.AddConstraint(
            model_name='appointment',
            constraint=models.CheckConstraint(check=models.Q(('duration_minutes__gt', 0), ('duration_minutes__lte', 480)), name='duration_minutes_reasonable'),
        ),
    ]
