# Generated by Django 4.2.11 on 2025-08-21 21:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('ambulances', '0003_trafficcondition_routeoptimization_geofencezone_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Channel Name')),
                ('channel_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('push', 'Push Notification'), ('voice', 'Voice Call'), ('slack', 'Slack'), ('teams', 'Microsoft Teams'), ('webhook', 'Webhook'), ('in_app', 'In-App Notification')], max_length=20, verbose_name='Channel Type')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance'), ('error', 'Error State')], default='active', max_length=20, verbose_name='Status')),
                ('configuration', models.JSONField(default=dict, verbose_name='Configuration')),
                ('api_endpoint', models.URLField(blank=True, verbose_name='API Endpoint')),
                ('api_key', models.CharField(blank=True, max_length=255, verbose_name='API Key')),
                ('rate_limit_per_minute', models.PositiveIntegerField(default=60, verbose_name='Rate Limit (per minute)')),
                ('rate_limit_per_hour', models.PositiveIntegerField(default=1000, verbose_name='Rate Limit (per hour)')),
                ('priority_order', models.PositiveIntegerField(default=1, verbose_name='Priority Order')),
                ('reliability_score', models.FloatField(default=1.0, verbose_name='Reliability Score')),
                ('total_sent', models.PositiveIntegerField(default=0, verbose_name='Total Sent')),
                ('total_delivered', models.PositiveIntegerField(default=0, verbose_name='Total Delivered')),
                ('total_failed', models.PositiveIntegerField(default=0, verbose_name='Total Failed')),
            ],
            options={
                'verbose_name': 'Notification Channel',
                'verbose_name_plural': 'Notification Channels',
                'ordering': ['priority_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Template Name')),
                ('template_type', models.CharField(choices=[('emergency_dispatch', 'Emergency Dispatch'), ('status_update', 'Status Update'), ('arrival_notification', 'Arrival Notification'), ('completion_alert', 'Completion Alert'), ('system_alert', 'System Alert'), ('maintenance_notice', 'Maintenance Notice'), ('shift_reminder', 'Shift Reminder'), ('training_alert', 'Training Alert')], max_length=30, verbose_name='Template Type')),
                ('subject_template', models.CharField(max_length=255, verbose_name='Subject Template')),
                ('body_template', models.TextField(verbose_name='Body Template')),
                ('html_template', models.TextField(blank=True, verbose_name='HTML Template')),
                ('template_variables', models.JSONField(default=list, verbose_name='Template Variables')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('requires_confirmation', models.BooleanField(default=False, verbose_name='Requires Confirmation')),
                ('supported_channels', models.ManyToManyField(blank=True, to='communications.notificationchannel', verbose_name='Supported Channels')),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'ordering': ['template_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email_enabled', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('sms_enabled', models.BooleanField(default=True, verbose_name='SMS Notifications')),
                ('push_enabled', models.BooleanField(default=True, verbose_name='Push Notifications')),
                ('in_app_enabled', models.BooleanField(default=True, verbose_name='In-App Notifications')),
                ('emergency_alerts', models.BooleanField(default=True, verbose_name='Emergency Alerts')),
                ('dispatch_notifications', models.BooleanField(default=True, verbose_name='Dispatch Notifications')),
                ('status_updates', models.BooleanField(default=True, verbose_name='Status Updates')),
                ('system_alerts', models.BooleanField(default=True, verbose_name='System Alerts')),
                ('quiet_hours_start', models.TimeField(blank=True, null=True, verbose_name='Quiet Hours Start')),
                ('quiet_hours_end', models.TimeField(blank=True, null=True, verbose_name='Quiet Hours End')),
                ('weekend_notifications', models.BooleanField(default=True, verbose_name='Weekend Notifications')),
                ('preferred_email', models.EmailField(blank=True, max_length=254, verbose_name='Preferred Email')),
                ('preferred_phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Invalid phone number', regex='^\\+?1?\\d{9,15}$')], verbose_name='Preferred Phone')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='communication_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification Preference',
                'verbose_name_plural': 'Notification Preferences',
            },
        ),
        migrations.CreateModel(
            name='SecureMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('message_type', models.CharField(choices=[('general', 'General Message'), ('patient_update', 'Patient Update'), ('consultation', 'Consultation Request'), ('emergency', 'Emergency Communication'), ('handoff', 'Patient Handoff'), ('report', 'Medical Report')], max_length=20, verbose_name='Message Type')),
                ('is_encrypted', models.BooleanField(default=True, verbose_name='Encrypted')),
                ('encryption_key_id', models.CharField(blank=True, max_length=100, verbose_name='Encryption Key ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('read', 'Read'), ('archived', 'Archived')], default='draft', max_length=20, verbose_name='Status')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('has_attachments', models.BooleanField(default=False, verbose_name='Has Attachments')),
                ('related_patient', models.CharField(blank=True, max_length=100, verbose_name='Related Patient ID')),
                ('access_log', models.JSONField(default=list, verbose_name='Access Log')),
                ('recipients', models.ManyToManyField(related_name='received_secure_messages', to=settings.AUTH_USER_MODEL, verbose_name='Recipients')),
                ('related_dispatch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secure_messages', to='ambulances.dispatch')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_secure_messages', to=settings.AUTH_USER_MODEL, verbose_name='Sender')),
            ],
            options={
                'verbose_name': 'Secure Message',
                'verbose_name_plural': 'Secure Messages',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['sender', 'status'], name='communicati_sender__fae798_idx'), models.Index(fields=['message_type', 'created_at'], name='communicati_message_7a365f_idx'), models.Index(fields=['related_patient'], name='communicati_related_cc1e1b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipient_email', models.EmailField(blank=True, max_length=254, verbose_name='Recipient Email')),
                ('recipient_phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Invalid phone number', regex='^\\+?1?\\d{9,15}$')], verbose_name='Recipient Phone')),
                ('subject', models.CharField(max_length=255, verbose_name='Subject')),
                ('message', models.TextField(verbose_name='Message')),
                ('html_content', models.TextField(blank=True, verbose_name='HTML Content')),
                ('notification_type', models.CharField(max_length=30, verbose_name='Notification Type')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent'), ('critical', 'Critical')], default='normal', max_length=20, verbose_name='Priority')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='pending', max_length=20, verbose_name='Status')),
                ('scheduled_at', models.DateTimeField(blank=True, null=True, verbose_name='Scheduled At')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Sent At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('external_id', models.CharField(blank=True, max_length=255, verbose_name='External ID')),
                ('delivery_attempts', models.PositiveIntegerField(default=0, verbose_name='Delivery Attempts')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('context_data', models.JSONField(default=dict, verbose_name='Context Data')),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='communications.notificationchannel', verbose_name='Delivery Channel')),
                ('recipient_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Recipient User')),
                ('related_dispatch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='ambulances.dispatch')),
                ('related_emergency_call', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='ambulances.emergencycall')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='communications.notificationtemplate', verbose_name='Template Used')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient_user', 'status'], name='communicati_recipie_593f33_idx'), models.Index(fields=['notification_type', 'priority'], name='communicati_notific_4934dc_idx'), models.Index(fields=['scheduled_at'], name='communicati_schedul_766114_idx'), models.Index(fields=['status', 'created_at'], name='communicati_status_9661c5_idx')],
            },
        ),
        migrations.CreateModel(
            name='EmergencyAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200, verbose_name='Alert Title')),
                ('message', models.TextField(verbose_name='Alert Message')),
                ('alert_type', models.CharField(choices=[('mass_casualty', 'Mass Casualty Incident'), ('hospital_diversion', 'Hospital Diversion'), ('weather_emergency', 'Weather Emergency'), ('system_outage', 'System Outage'), ('security_alert', 'Security Alert'), ('training_drill', 'Training Drill'), ('policy_update', 'Policy Update'), ('general_alert', 'General Alert')], max_length=30, verbose_name='Alert Type')),
                ('severity', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('alert', 'Alert'), ('emergency', 'Emergency'), ('critical', 'Critical')], max_length=20, verbose_name='Severity')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('resolved', 'Resolved'), ('cancelled', 'Cancelled'), ('expired', 'Expired')], default='draft', max_length=20, verbose_name='Status')),
                ('target_roles', models.JSONField(default=list, verbose_name='Target Roles')),
                ('target_locations', models.JSONField(default=list, verbose_name='Target Locations')),
                ('alert_start', models.DateTimeField(auto_now_add=True, verbose_name='Alert Start')),
                ('alert_end', models.DateTimeField(blank=True, null=True, verbose_name='Alert End')),
                ('auto_resolve_at', models.DateTimeField(blank=True, null=True, verbose_name='Auto Resolve At')),
                ('requires_acknowledgment', models.BooleanField(default=False, verbose_name='Requires Acknowledgment')),
                ('total_recipients', models.PositiveIntegerField(default=0, verbose_name='Total Recipients')),
                ('total_delivered', models.PositiveIntegerField(default=0, verbose_name='Total Delivered')),
                ('total_acknowledged', models.PositiveIntegerField(default=0, verbose_name='Total Acknowledged')),
                ('acknowledged_by', models.ManyToManyField(blank=True, related_name='acknowledged_emergency_alerts', to=settings.AUTH_USER_MODEL, verbose_name='Acknowledged By')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_emergency_alerts', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('delivery_channels', models.ManyToManyField(to='communications.notificationchannel', verbose_name='Delivery Channels')),
                ('target_users', models.ManyToManyField(blank=True, related_name='emergency_alerts', to=settings.AUTH_USER_MODEL, verbose_name='Target Users')),
            ],
            options={
                'verbose_name': 'Emergency Alert',
                'verbose_name_plural': 'Emergency Alerts',
                'ordering': ['-alert_start'],
                'indexes': [models.Index(fields=['alert_type', 'severity'], name='communicati_alert_t_9276c7_idx'), models.Index(fields=['status', 'alert_start'], name='communicati_status_47b779_idx')],
            },
        ),
    ]
