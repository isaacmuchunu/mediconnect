# MediConnect Hospital E-Referral System
# Django Project .gitignore

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
.env.*

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Django specific
*.pyc
*.pyo
*.pyd
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
media/
staticfiles/
static/dist/
static/build/

# If your Django project uses Celery
celerybeat-schedule
celerybeat.pid

# Environment variables
.env
.env.local
.env.development
.env.test
.env.production

# Django secret key and sensitive config
secret_key.txt
*.key
*.pem
*.crt

# Database files
*.db
*.sqlite
*.sqlite3

# Redis dump files
dump.rdb

# Node.js dependencies (for Tailwind CSS and frontend tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity

# Tailwind CSS
static/src/
static/dist/output.css
*.css.map

# Frontend build files
build/
dist/
.next/
out/

# IDE and Editor files
.vscode/
.idea/
*.swp
*.swo
*~
.DS_Store
Thumbs.db

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
lcov.info

# nyc test coverage
.nyc_output

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# AWS deployment
.elasticbeanstalk/

# Docker
docker-compose.override.yml
.dockerignore

# Kubernetes
*.yaml.local
*.yml.local

# Backup files
*.bak
*.backup
*.old

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msm
*.msp

# Windows shortcuts
*.lnk

# Project specific
# Media uploads
media/uploads/
media/documents/
media/reports/
media/attachments/

# Static files collected for production
staticfiles/
static/collected/

# Test files and coverage
htmlcov/
.coverage
coverage.xml
junit.xml
test-results/
test-reports/

# Security and compliance files
security_report.json
safety_report.json
bandit_report.json

# Performance test results
locust_reports/
performance_results/

# Documentation builds
docs/_build/
docs/html/
docs/latex/

# Monitoring and logging
logs/
monitoring/
grafana/
prometheus/

# Cache files
cache/
.cache/
redis-cache/

# Temporary development files
*.tmp
*.temp
development_notes.md
TODO.md
scratch.py

# HIPAA compliance - ensure no patient data in repo
patient_data/
phi_data/
confidential/
private/

# Local configuration overrides
local_config.py
development_settings.py

# Backup and migration files
backup/
migrations/backup/
data_dumps/

# Third-party API keys and secrets (these should be in .env)
api_keys.py
secrets.py
credentials.json
service_account.json

# SSL certificates
*.crt
*.key
*.pem
*.p12
*.pfx

# Database backups
*.sql
*.dump
*.backup

# Jupyter notebooks (if used for analysis)
*.ipynb
.ipynb_checkpoints/

# PyCharm
.idea/

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.sublime-project
*.sublime-workspace

# Emacs
*~
\#*\#
.\#*

# Vim
*.swp
*.swo
.vimrc.local

# Local environment overrides
.env.override
.local

# Development database
dev.db
development.sqlite3
test.sqlite3

# Redis development data
redis.conf
redis.log

# Celery beat schedule
celerybeat-schedule.db

# pip freeze outputs
requirements-freeze.txt
requirements-dev-freeze.txt