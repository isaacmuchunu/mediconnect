# Generated by Django 4.2.11 on 2025-08-21 16:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, verbose_name='API Key Name')),
                ('key', models.CharField(max_length=64, unique=True, verbose_name='API Key')),
                ('permission_level', models.CharField(choices=[('read', 'Read Only'), ('write', 'Read/Write'), ('admin', 'Admin')], default='read', max_length=10, verbose_name='Permission Level')),
                ('allowed_ips', models.JSONField(blank=True, default=list, verbose_name='Allowed IP Addresses')),
                ('rate_limit', models.PositiveIntegerField(default=1000, verbose_name='Rate Limit (requests/hour)')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('last_used', models.DateTimeField(blank=True, null=True, verbose_name='Last Used')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='Usage Count')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Key',
                'verbose_name_plural': 'API Keys',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ExternalIntegration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, verbose_name='Integration Name')),
                ('integration_type', models.CharField(choices=[('hl7', 'HL7 FHIR'), ('epic', 'Epic MyChart'), ('cerner', 'Cerner'), ('allscripts', 'Allscripts'), ('custom', 'Custom Integration')], max_length=20, verbose_name='Integration Type')),
                ('base_url', models.URLField(verbose_name='Base URL')),
                ('api_key', models.CharField(blank=True, max_length=255, verbose_name='API Key')),
                ('username', models.CharField(blank=True, max_length=100, verbose_name='Username')),
                ('password', models.CharField(blank=True, max_length=255, verbose_name='Password')),
                ('configuration', models.JSONField(default=dict, verbose_name='Configuration')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('last_sync', models.DateTimeField(blank=True, null=True, verbose_name='Last Sync')),
                ('sync_frequency_hours', models.PositiveIntegerField(default=24, verbose_name='Sync Frequency (hours)')),
            ],
            options={
                'verbose_name': 'External Integration',
                'verbose_name_plural': 'External Integrations',
            },
        ),
        migrations.CreateModel(
            name='WebhookEndpoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, verbose_name='Webhook Name')),
                ('url', models.URLField(verbose_name='Webhook URL')),
                ('secret', models.CharField(max_length=64, verbose_name='Secret Key')),
                ('event_types', models.JSONField(default=list, verbose_name='Event Types')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('retry_count', models.PositiveIntegerField(default=3, verbose_name='Max Retry Count')),
                ('timeout_seconds', models.PositiveIntegerField(default=30, verbose_name='Timeout (seconds)')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Webhook Endpoint',
                'verbose_name_plural': 'Webhook Endpoints',
            },
        ),
        migrations.CreateModel(
            name='WebhookDelivery',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('event_type', models.CharField(max_length=50, verbose_name='Event Type')),
                ('payload', models.JSONField(verbose_name='Payload')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('retrying', 'Retrying')], default='pending', max_length=20, verbose_name='Status')),
                ('response_status', models.PositiveIntegerField(blank=True, null=True, verbose_name='Response Status')),
                ('response_body', models.TextField(blank=True, verbose_name='Response Body')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('attempt_count', models.PositiveIntegerField(default=0, verbose_name='Attempt Count')),
                ('next_retry', models.DateTimeField(blank=True, null=True, verbose_name='Next Retry')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('webhook', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deliveries', to='api.webhookendpoint')),
            ],
            options={
                'verbose_name': 'Webhook Delivery',
                'verbose_name_plural': 'Webhook Deliveries',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataExport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('name', models.CharField(max_length=100, verbose_name='Export Name')),
                ('export_format', models.CharField(choices=[('csv', 'CSV'), ('json', 'JSON'), ('xml', 'XML'), ('hl7', 'HL7 FHIR'), ('pdf', 'PDF Report')], max_length=10, verbose_name='Export Format')),
                ('data_type', models.CharField(max_length=50, verbose_name='Data Type')),
                ('filters', models.JSONField(default=dict, verbose_name='Filters')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('expired', 'Expired')], default='pending', max_length=20, verbose_name='Status')),
                ('file_path', models.FileField(blank=True, null=True, upload_to='exports/', verbose_name='Export File')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='File Size (bytes)')),
                ('record_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Record Count')),
                ('started_at', models.DateTimeField(blank=True, null=True, verbose_name='Started At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_exports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Data Export',
                'verbose_name_plural': 'Data Exports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='APIRequestLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('endpoint', models.CharField(max_length=255, verbose_name='Endpoint')),
                ('method', models.CharField(max_length=10, verbose_name='HTTP Method')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('request_data', models.JSONField(blank=True, default=dict, verbose_name='Request Data')),
                ('response_status', models.PositiveIntegerField(verbose_name='Response Status')),
                ('response_time_ms', models.PositiveIntegerField(verbose_name='Response Time (ms)')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('api_key', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='request_logs', to='api.apikey')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Request Log',
                'verbose_name_plural': 'API Request Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['api_key', 'created_at'], name='api_apirequ_api_key_381542_idx'), models.Index(fields=['endpoint', 'method'], name='api_apirequ_endpoin_47b275_idx'), models.Index(fields=['response_status'], name='api_apirequ_respons_ae91b6_idx')],
            },
        ),
    ]
