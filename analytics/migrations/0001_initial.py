# Generated by Django 4.2.11 on 2025-08-21 21:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('doctors', '0002_alter_availability_options_and_more'),
        ('ambulances', '0003_trafficcondition_routeoptimization_geofencezone_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='KPITarget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('kpi_type', models.CharField(choices=[('response_time', 'Response Time'), ('dispatch_accuracy', 'Dispatch Accuracy'), ('hospital_handoff_time', 'Hospital Handoff Time'), ('patient_satisfaction', 'Patient Satisfaction'), ('crew_utilization', 'Crew Utilization'), ('fuel_efficiency', 'Fuel Efficiency'), ('maintenance_cost', 'Maintenance Cost'), ('system_uptime', 'System Uptime')], max_length=30, verbose_name='KPI Type')),
                ('name', models.CharField(max_length=100, verbose_name='KPI Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('target_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Target Value')),
                ('warning_threshold', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Warning Threshold')),
                ('critical_threshold', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Critical Threshold')),
                ('unit', models.CharField(max_length=20, verbose_name='Unit')),
                ('higher_is_better', models.BooleanField(default=True, verbose_name='Higher is Better')),
                ('measurement_period', models.CharField(default='daily', max_length=20, verbose_name='Measurement Period')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'KPI Target',
                'verbose_name_plural': 'KPI Targets',
                'ordering': ['kpi_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Report Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('report_type', models.CharField(choices=[('daily_summary', 'Daily Summary'), ('weekly_performance', 'Weekly Performance'), ('monthly_analytics', 'Monthly Analytics'), ('quarterly_review', 'Quarterly Review'), ('annual_report', 'Annual Report'), ('incident_report', 'Incident Report'), ('compliance_report', 'Compliance Report'), ('financial_summary', 'Financial Summary'), ('custom_report', 'Custom Report')], max_length=30, verbose_name='Report Type')),
                ('frequency', models.CharField(choices=[('manual', 'Manual'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annually', 'Annually')], max_length=20, verbose_name='Frequency')),
                ('output_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('html', 'HTML'), ('json', 'JSON')], max_length=10, verbose_name='Output Format')),
                ('data_sources', models.JSONField(default=list, verbose_name='Data Sources')),
                ('filters', models.JSONField(default=dict, verbose_name='Filters')),
                ('date_range_type', models.CharField(default='relative', max_length=20, verbose_name='Date Range Type')),
                ('template_content', models.TextField(verbose_name='Template Content')),
                ('chart_configurations', models.JSONField(default=list, verbose_name='Chart Configurations')),
                ('recipient_emails', models.JSONField(default=list, verbose_name='Additional Email Recipients')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('next_generation', models.DateTimeField(blank=True, null=True, verbose_name='Next Generation')),
                ('last_generated', models.DateTimeField(blank=True, null=True, verbose_name='Last Generated')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_report_templates', to=settings.AUTH_USER_MODEL)),
                ('recipients', models.ManyToManyField(blank=True, related_name='report_subscriptions', to=settings.AUTH_USER_MODEL, verbose_name='Recipients')),
            ],
            options={
                'verbose_name': 'Report Template',
                'verbose_name_plural': 'Report Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100, verbose_name='Widget Title')),
                ('widget_type', models.CharField(choices=[('chart_line', 'Line Chart'), ('chart_bar', 'Bar Chart'), ('chart_pie', 'Pie Chart'), ('chart_area', 'Area Chart'), ('metric_card', 'Metric Card'), ('table', 'Data Table'), ('map', 'Map View'), ('gauge', 'Gauge'), ('progress', 'Progress Bar'), ('alert_list', 'Alert List')], max_length=20, verbose_name='Widget Type')),
                ('size', models.CharField(choices=[('small', 'Small (1x1)'), ('medium', 'Medium (2x1)'), ('large', 'Large (2x2)'), ('wide', 'Wide (3x1)'), ('extra_large', 'Extra Large (3x2)')], default='medium', max_length=20, verbose_name='Size')),
                ('data_source', models.CharField(max_length=100, verbose_name='Data Source')),
                ('query_parameters', models.JSONField(default=dict, verbose_name='Query Parameters')),
                ('refresh_interval', models.PositiveIntegerField(default=300, verbose_name='Refresh Interval (seconds)')),
                ('chart_config', models.JSONField(default=dict, verbose_name='Chart Configuration')),
                ('color_scheme', models.CharField(default='default', max_length=50, verbose_name='Color Scheme')),
                ('dashboard_position', models.PositiveIntegerField(default=0, verbose_name='Dashboard Position')),
                ('is_visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('visible_to_roles', models.JSONField(default=list, verbose_name='Visible to Roles')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'ordering': ['dashboard_position', 'title'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetric',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metric_type', models.CharField(choices=[('response_time', 'Response Time'), ('dispatch_time', 'Dispatch Time'), ('transport_time', 'Transport Time'), ('hospital_handoff_time', 'Hospital Handoff Time'), ('total_call_duration', 'Total Call Duration'), ('ambulance_utilization', 'Ambulance Utilization'), ('hospital_capacity', 'Hospital Capacity'), ('crew_efficiency', 'Crew Efficiency'), ('fuel_consumption', 'Fuel Consumption'), ('maintenance_cost', 'Maintenance Cost')], max_length=30, verbose_name='Metric Type')),
                ('metric_name', models.CharField(max_length=100, verbose_name='Metric Name')),
                ('value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Value')),
                ('unit', models.CharField(choices=[('minutes', 'Minutes'), ('seconds', 'Seconds'), ('hours', 'Hours'), ('percentage', 'Percentage'), ('count', 'Count'), ('currency', 'Currency'), ('kilometers', 'Kilometers'), ('liters', 'Liters')], max_length=20, verbose_name='Unit')),
                ('measurement_date', models.DateField(verbose_name='Measurement Date')),
                ('measurement_hour', models.PositiveIntegerField(blank=True, null=True, verbose_name='Measurement Hour')),
                ('metadata', models.JSONField(default=dict, verbose_name='Metadata')),
                ('ambulance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='analytics_performance_metrics', to='ambulances.ambulance')),
                ('crew_member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to=settings.AUTH_USER_MODEL)),
                ('dispatch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='ambulances.dispatch')),
                ('hospital', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='performance_metrics', to='doctors.hospital')),
            ],
            options={
                'verbose_name': 'Performance Metric',
                'verbose_name_plural': 'Performance Metrics',
                'ordering': ['-measurement_date', '-created_at'],
                'indexes': [models.Index(fields=['metric_type', 'measurement_date'], name='analytics_p_metric__8b5cc4_idx'), models.Index(fields=['ambulance', 'metric_type'], name='analytics_p_ambulan_7a4cef_idx'), models.Index(fields=['hospital', 'metric_type'], name='analytics_p_hospita_d942f3_idx')],
            },
        ),
        migrations.CreateModel(
            name='GeneratedReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200, verbose_name='Report Title')),
                ('status', models.CharField(choices=[('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='generating', max_length=20, verbose_name='Status')),
                ('generation_started', models.DateTimeField(auto_now_add=True, verbose_name='Generation Started')),
                ('generation_completed', models.DateTimeField(blank=True, null=True, verbose_name='Generation Completed')),
                ('file_path', models.CharField(blank=True, max_length=500, verbose_name='File Path')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True, verbose_name='File Size (bytes)')),
                ('content_hash', models.CharField(blank=True, max_length=64, verbose_name='Content Hash')),
                ('data_start_date', models.DateTimeField(verbose_name='Data Start Date')),
                ('data_end_date', models.DateTimeField(verbose_name='Data End Date')),
                ('generation_parameters', models.JSONField(default=dict, verbose_name='Generation Parameters')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_generated_reports', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to='analytics.reporttemplate')),
            ],
            options={
                'verbose_name': 'Generated Report',
                'verbose_name_plural': 'Generated Reports',
                'ordering': ['-generation_started'],
                'indexes': [models.Index(fields=['template', 'status'], name='analytics_g_templat_5175b4_idx'), models.Index(fields=['generated_by', 'generation_started'], name='analytics_g_generat_60d44c_idx')],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_type', models.CharField(choices=[('user_login', 'User Login'), ('dispatch_created', 'Dispatch Created'), ('ambulance_assigned', 'Ambulance Assigned'), ('status_updated', 'Status Updated'), ('hospital_arrival', 'Hospital Arrival'), ('call_completed', 'Call Completed'), ('report_generated', 'Report Generated'), ('alert_sent', 'Alert Sent'), ('message_sent', 'Message Sent'), ('system_error', 'System Error')], max_length=30, verbose_name='Event Type')),
                ('event_name', models.CharField(max_length=100, verbose_name='Event Name')),
                ('session_id', models.CharField(blank=True, max_length=100, verbose_name='Session ID')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('event_data', models.JSONField(default=dict, verbose_name='Event Data')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('duration_ms', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration (ms)')),
                ('related_ambulance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_events', to='ambulances.ambulance')),
                ('related_dispatch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_events', to='ambulances.dispatch')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='analytics_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Analytics Event',
                'verbose_name_plural': 'Analytics Events',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['event_type', 'timestamp'], name='analytics_a_event_t_64745b_idx'), models.Index(fields=['user', 'timestamp'], name='analytics_a_user_id_5c8c13_idx'), models.Index(fields=['session_id'], name='analytics_a_session_8757e5_idx')],
            },
        ),
    ]
